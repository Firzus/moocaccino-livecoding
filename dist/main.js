/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./dist/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./dist/Map.js":
/*!*********************!*\
  !*** ./dist/Map.js ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Map = void 0;\r\nvar maze_1 = __webpack_require__(/*! ./maze/maze */ \"./dist/maze/maze.js\");\r\nvar Map = /** @class */ (function () {\r\n    function Map() {\r\n        this.data = [];\r\n    }\r\n    Map.prototype.reset = function (rows, cols, startRow, startCol) {\r\n        this.rows = rows;\r\n        this.cols = cols;\r\n        this.startRow = startRow;\r\n        this.startCol = startCol;\r\n        this.endRow = Math.floor(Math.random() * (this.rows - 2));\r\n        this.endCol = Math.floor(Math.random() * (this.cols - 2));\r\n        var isDirty = Math.random() > 0.1;\r\n        this.data = new maze_1.Maze().doMazeRecursive(this.rows, this.cols, this.startRow, this.startCol, this.endRow, this.endCol, isDirty);\r\n        this.getStartNode().isStartNode = true;\r\n        this.getEndNode().isEndNode = true;\r\n    };\r\n    Map.prototype.getData = function () {\r\n        return this.data;\r\n    };\r\n    Map.prototype.getStartNode = function () {\r\n        if (this.data[this.startRow])\r\n            return this.data[this.startRow][this.startCol] || null;\r\n        else\r\n            return null;\r\n    };\r\n    Map.prototype.getEndNode = function () {\r\n        if (this.data[this.endRow])\r\n            return this.data[this.endRow][this.endCol] || null;\r\n        else\r\n            return null;\r\n    };\r\n    Map.prototype.cloneNodes = function () {\r\n        var copy = this.data.map(function (row) {\r\n            return row.map(function (node) {\r\n                return node.clone();\r\n            });\r\n        });\r\n        return copy;\r\n    };\r\n    Map.prototype.clone = function () {\r\n        var map = new Map();\r\n        map.rows = this.rows;\r\n        map.cols = this.cols;\r\n        map.startRow = this.startRow;\r\n        map.startCol = this.startCol;\r\n        map.endRow = this.endRow;\r\n        map.endCol = this.endCol;\r\n        map.data = this.cloneNodes();\r\n        return map;\r\n    };\r\n    return Map;\r\n}());\r\nexports.Map = Map;\r\n\n\n//# sourceURL=webpack:///./dist/Map.js?");

/***/ }),

/***/ "./dist/assets/AssetsManager.js":
/*!**************************************!*\
  !*** ./dist/assets/AssetsManager.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.AssetsManager = exports.AssetType = void 0;\r\nvar AssetType;\r\n(function (AssetType) {\r\n    AssetType[AssetType[\"JSON\"] = 1] = \"JSON\";\r\n    AssetType[AssetType[\"IMAGE\"] = 2] = \"IMAGE\";\r\n})(AssetType = exports.AssetType || (exports.AssetType = {}));\r\nvar AssetsManager = /** @class */ (function () {\r\n    function AssetsManager(token) {\r\n        this._queue = [];\r\n        if (token !== AssetsManager.token)\r\n            throw (new Error(\"singleton error, use getInstance static method instead of new operator\"));\r\n    }\r\n    AssetsManager.getInstance = function () {\r\n        if (AssetsManager.instance === null)\r\n            AssetsManager.instance = new AssetsManager(AssetsManager.token);\r\n        return AssetsManager.instance;\r\n    };\r\n    AssetsManager.prototype.queue = function (key, uri, type) {\r\n        this._queue.push({\r\n            key: key,\r\n            uri: uri,\r\n            type: type,\r\n            data: null\r\n        });\r\n    };\r\n    AssetsManager.prototype.getAssets = function () {\r\n        return this._queue;\r\n    };\r\n    AssetsManager.prototype.getAssetByKey = function (key) {\r\n        return this._queue.find(function (value) {\r\n            return value.key === key;\r\n        }) || null;\r\n    };\r\n    AssetsManager.prototype.load = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var i, current, response, _a, raw, base64, img, json;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        i = 0;\r\n                        _b.label = 1;\r\n                    case 1:\r\n                        if (!(i < this._queue.length)) return [3 /*break*/, 8];\r\n                        current = this._queue[i];\r\n                        return [4 /*yield*/, fetch(current.uri)];\r\n                    case 2:\r\n                        response = _b.sent();\r\n                        _a = current.type;\r\n                        switch (_a) {\r\n                            case AssetType.IMAGE: return [3 /*break*/, 3];\r\n                            case AssetType.JSON: return [3 /*break*/, 5];\r\n                        }\r\n                        return [3 /*break*/, 7];\r\n                    case 3: return [4 /*yield*/, response.blob()];\r\n                    case 4:\r\n                        raw = _b.sent();\r\n                        base64 = URL.createObjectURL(raw);\r\n                        img = document.createElement(\"img\");\r\n                        img.src = base64;\r\n                        current.data = img;\r\n                        return [3 /*break*/, 7];\r\n                    case 5: return [4 /*yield*/, response.json()];\r\n                    case 6:\r\n                        json = _b.sent();\r\n                        current.data = json;\r\n                        return [3 /*break*/, 7];\r\n                    case 7:\r\n                        i++;\r\n                        return [3 /*break*/, 1];\r\n                    case 8: return [2 /*return*/, this._queue];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    AssetsManager.instance = null;\r\n    AssetsManager.token = \"secret\";\r\n    return AssetsManager;\r\n}());\r\nexports.AssetsManager = AssetsManager;\r\n\n\n//# sourceURL=webpack:///./dist/assets/AssetsManager.js?");

/***/ }),

/***/ "./dist/config/Config.js":
/*!*******************************!*\
  !*** ./dist/config/Config.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.CELL_SIZE = exports.ASSETS_LISTS = exports.WALL_KEY = exports.FLOOR_KEY = exports.CHEST_KEY = exports.HEROE_KEY = void 0;\r\nvar AssetsManager_1 = __webpack_require__(/*! ../assets/AssetsManager */ \"./dist/assets/AssetsManager.js\");\r\nexports.HEROE_KEY = \"heroe\";\r\nexports.CHEST_KEY = \"chest\";\r\nexports.FLOOR_KEY = \"floor\";\r\nexports.WALL_KEY = \"wall\";\r\nexports.ASSETS_LISTS = [\r\n    { key: exports.HEROE_KEY, uri: \"assets/heroe.png\", type: AssetsManager_1.AssetType.IMAGE },\r\n    { key: exports.CHEST_KEY, uri: \"assets/chest.png\", type: AssetsManager_1.AssetType.IMAGE },\r\n    { key: exports.FLOOR_KEY, uri: \"assets/floor2.jpg\", type: AssetsManager_1.AssetType.IMAGE },\r\n    { key: exports.WALL_KEY, uri: \"assets/wall3.jpg\", type: AssetsManager_1.AssetType.IMAGE }\r\n];\r\nexports.CELL_SIZE = 84;\r\n\n\n//# sourceURL=webpack:///./dist/config/Config.js?");

/***/ }),

/***/ "./dist/index.js":
/*!***********************!*\
  !*** ./dist/index.js ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar PathFinder_1 = __webpack_require__(/*! ./pathfinding/PathFinder */ \"./dist/pathfinding/PathFinder.js\");\r\nvar Renderer_1 = __webpack_require__(/*! ./view/Renderer */ \"./dist/view/Renderer.js\");\r\nvar Map_1 = __webpack_require__(/*! ./Map */ \"./dist/Map.js\");\r\nvar AssetsManager_1 = __webpack_require__(/*! ./assets/AssetsManager */ \"./dist/assets/AssetsManager.js\");\r\nvar Config_1 = __webpack_require__(/*! ./config/Config */ \"./dist/config/Config.js\");\r\nvar Log_1 = __webpack_require__(/*! ./pathfinding/Log */ \"./dist/pathfinding/Log.js\");\r\nvar Node_1 = __webpack_require__(/*! ./pathfinding/Node */ \"./dist/pathfinding/Node.js\");\r\nvar FastFinder_1 = __webpack_require__(/*! ./pathfinding/FastFinder */ \"./dist/pathfinding/FastFinder.js\");\r\nvar manager = AssetsManager_1.AssetsManager.getInstance();\r\nvar finder = new PathFinder_1.PathFinder();\r\nvar fast = new FastFinder_1.FastFinder();\r\nvar renderer = new Renderer_1.Renderer();\r\nvar map = new Map_1.Map();\r\nvar logs = [];\r\nvar solution = [];\r\nfunction showSolution(solution) {\r\n    solution.forEach(function (value) {\r\n        var node = renderer.getFloorByCoords(value.row, value.col).getModel();\r\n        node.state = Node_1.RETAINED;\r\n    });\r\n}\r\nfunction nextLog() {\r\n    if (logs.length === 0)\r\n        return;\r\n    var currentLog = logs.shift();\r\n    var target = currentLog.target;\r\n    var heroe = renderer.getHeroe();\r\n    switch (currentLog.type) {\r\n        case Log_1.LogType.SET_CURRENT_NODE:\r\n            heroe.row = target.row;\r\n            heroe.col = target.col;\r\n            break;\r\n        case Log_1.LogType.ADD_TO_OPEN_LIST:\r\n            renderer.getFloorByCoords(target.row, target.col).getModel().state = Node_1.OPENED;\r\n            break;\r\n        case Log_1.LogType.ADD_TO_CLOSE_LIST:\r\n            renderer.getFloorByCoords(target.row, target.col).getModel().state = Node_1.CLOSED;\r\n            break;\r\n        case Log_1.LogType.RECALC_VALUES:\r\n            var node = renderer.getFloorByCoords(target.row, target.col).getModel();\r\n            node.g = target.g;\r\n            node.f = target.f;\r\n            node.h = target.h;\r\n            break;\r\n        case Log_1.LogType.COMPLETE:\r\n            showSolution(solution);\r\n            break;\r\n    }\r\n    setTimeout(function () {\r\n        nextLog();\r\n    }, 20);\r\n}\r\nfunction preload() {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    window.removeEventListener(\"load\", preload);\r\n                    Config_1.ASSETS_LISTS.forEach(function (asset) { return manager.queue(asset.key, asset.uri, asset.type); });\r\n                    return [4 /*yield*/, manager.load()];\r\n                case 1:\r\n                    _a.sent();\r\n                    start();\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction start() {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var canvas, width, height, numRows, numCols, solution;\r\n        return __generator(this, function (_a) {\r\n            canvas = document.getElementById(\"map\");\r\n            width = window.screen.width;\r\n            height = window.screen.height;\r\n            numRows = width / Config_1.CELL_SIZE;\r\n            numCols = height / Config_1.CELL_SIZE;\r\n            // set actual map\r\n            map.reset(numRows, numCols, 1, 1);\r\n            canvas.width = width;\r\n            canvas.height = height;\r\n            /*\r\n            // create copy and get result from virtual map\r\n            const copy: Map = map.clone();\r\n            const result    = finder.findPath(copy.getData(),copy.getStartNode(), copy.getEndNode() );\r\n            logs            = result.logs;\r\n            solution        = result.solution;\r\n            setTimeout(\r\n                ()=>{\r\n                    nextLog();\r\n                },\r\n                3000\r\n            );\r\n            */\r\n            // reset renderer\r\n            renderer.reset(canvas, map);\r\n            renderer.render();\r\n            solution = fast.findPath(map.getData(), map.getStartNode(), map.getEndNode());\r\n            console.log(solution);\r\n            showSolution(solution);\r\n            return [2 /*return*/];\r\n        });\r\n    });\r\n}\r\nwindow.addEventListener(\"load\", preload);\r\n\n\n//# sourceURL=webpack:///./dist/index.js?");

/***/ }),

/***/ "./dist/maze/maze.js":
/*!***************************!*\
  !*** ./dist/maze/maze.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Maze = void 0;\r\nvar UNVISITED = 8;\r\nvar WALL = 1;\r\nvar VISITED = 0;\r\nvar NO_CELL = 999;\r\nvar Node_1 = __webpack_require__(/*! ../pathfinding/Node */ \"./dist/pathfinding/Node.js\");\r\nvar Maze = /** @class */ (function () {\r\n    function Maze() {\r\n    }\r\n    Maze.prototype.createGrid = function (m, n) {\r\n        var grid = [];\r\n        for (var i = 0; i < m; i++) {\r\n            var row = [];\r\n            for (var j = 0; j < n; j++) {\r\n                if (i % 2 == 0 || j % 2 == 0) {\r\n                    row.push(WALL);\r\n                }\r\n                else {\r\n                    row.push(UNVISITED);\r\n                }\r\n            }\r\n            grid.push(row);\r\n        }\r\n        return grid;\r\n    };\r\n    Maze.prototype.addroom = function (grid, row, col, width, height) {\r\n        for (var i = row; i <= row + height; i++) {\r\n            for (var j = col; j <= col + width; j++) {\r\n                grid[i][j] = VISITED;\r\n            }\r\n        }\r\n    };\r\n    Maze.prototype.rmaze = function (grid, row, col, path) {\r\n        var sides = [\r\n            [row, col - 2, row, col - 1],\r\n            [row, col + 2, row, col + 1],\r\n            [row - 2, col, row - 1, col],\r\n            [row + 2, col, row + 1, col]\r\n        ];\r\n        grid[row][col] = VISITED;\r\n        var start = (Math.random() * sides.length) >> 0;\r\n        for (var i = 0; i < sides.length; i++) {\r\n            var row1 = sides[start][0];\r\n            var col1 = sides[start][1];\r\n            var row2 = sides[start][2];\r\n            var col2 = sides[start][3];\r\n            if (grid[row1] != undefined && grid[row1][col1] != undefined && grid[row1][col1] == UNVISITED) {\r\n                grid[row2][col2] = VISITED;\r\n                path.push([row, col]);\r\n                this.rmaze(grid, row1, col1, path);\r\n                return;\r\n            }\r\n            start++;\r\n            if (start >= sides.length) {\r\n                start = 0;\r\n            }\r\n        }\r\n        if (path.length > 0) {\r\n            var coords = path.pop();\r\n            this.rmaze(grid, coords[0], coords[1], path);\r\n        }\r\n    };\r\n    Maze.prototype.dirty = function (grid) {\r\n        for (var i = 0; i < grid.length; i++) {\r\n            for (var j = 0; j < grid[i].length; j++) {\r\n                if (grid[i][j] == WALL) {\r\n                    if (grid[i - 1] != undefined &&\r\n                        grid[i + 1] != undefined &&\r\n                        grid[i - 1][j] == VISITED &&\r\n                        grid[i + 1][j] == VISITED &&\r\n                        Math.random() > 0.8) {\r\n                        grid[i][j] = VISITED;\r\n                    }\r\n                    else if (grid[i][j - 1] == VISITED &&\r\n                        grid[i][j + 1] == VISITED &&\r\n                        Math.random() > 0.8) {\r\n                        grid[i][j] = VISITED;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    Maze.prototype.doMazeRecursive = function (m, n, startRow, startCol, endRow, endCol, isDirty) {\r\n        if (startRow === void 0) { startRow = 1; }\r\n        if (startCol === void 0) { startCol = 1; }\r\n        if (endRow === void 0) { endRow = 1; }\r\n        if (endCol === void 0) { endCol = 1; }\r\n        if (isDirty === void 0) { isDirty = false; }\r\n        var grid = this.createGrid(m, n);\r\n        this.rmaze(grid, startRow, startCol, []);\r\n        if (isDirty) {\r\n            this.dirty(grid);\r\n        }\r\n        grid[endRow][endCol] = 0;\r\n        return this.convert(grid);\r\n    };\r\n    Maze.prototype.convert = function (grid) {\r\n        var graphe = [];\r\n        grid.forEach(function (row, i) {\r\n            graphe.push([]);\r\n            row.forEach(function (value, j) {\r\n                var node = new Node_1.Node();\r\n                if (value == 1) {\r\n                    node.walkable = false;\r\n                }\r\n                else {\r\n                    node.walkable = true;\r\n                }\r\n                node.row = i;\r\n                node.col = j;\r\n                graphe[i][j] = node;\r\n            });\r\n        });\r\n        return graphe;\r\n    };\r\n    return Maze;\r\n}());\r\nexports.Maze = Maze;\r\n\n\n//# sourceURL=webpack:///./dist/maze/maze.js?");

/***/ }),

/***/ "./dist/pathfinding/FastFinder.js":
/*!****************************************!*\
  !*** ./dist/pathfinding/FastFinder.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.FastFinder = void 0;\r\nvar Node_1 = __webpack_require__(/*! ./Node */ \"./dist/pathfinding/Node.js\");\r\nvar FastFinder = /** @class */ (function () {\r\n    function FastFinder() {\r\n        this.opened = [];\r\n        this.closed = [];\r\n    }\r\n    FastFinder.prototype.findPath = function (graphe, startNode, endNode) {\r\n        // on crée les listes fermées et les listes ouvertes\r\n        this.opened = new Array();\r\n        this.closed = new Array();\r\n        // - Ajout du node de départ à la liste ouverte.\r\n        this.addToOpenList(startNode);\r\n        //  stopper la boucle si la liste ouverte est vide\r\n        var hasNextStep = true;\r\n        while (hasNextStep) {\r\n            // a. Récupération du node avec le plus petit F contenu dans la liste ouverte. \r\n            // On le nommera CURRENT.\r\n            this.opened.sort(function (a, b) { return a.f < b.f ? -1 : 1; });\r\n            var currentNode = this.opened[0];\r\n            //  stopper la méthode si on ajoute le noeud d'arrivée à la liste fermée\r\n            if (this.opened.length > 0 && currentNode === endNode) {\r\n                hasNextStep = false;\r\n                break;\r\n            }\r\n            // b. Basculer CURRENT dans la liste fermée.\r\n            this.addToCloseList(currentNode);\r\n            //  récupération des voisins de CURRENT\r\n            var neighbours = this.getNeighbours(currentNode, graphe);\r\n            var maxi = neighbours.length;\r\n            // Pour chacun des nodes adjacents à CURRENT appliquer la méthode suivante:\r\n            for (var i = 0; i < maxi; ++i) {\r\n                var node = neighbours[i];\r\n                //Si le node est un obstacle ou est dans la liste fermée ignorez-le et passer à l'analyse d'un autre node.\r\n                if (this.isOnCloseList(node) || node.walkable === false)\r\n                    continue;\r\n                var opened = this.isOnOpenList(node);\r\n                /* on calcule le nouveau g */\r\n                var newG = currentNode.g + Node_1.NODE_DISTANCE_VALUE;\r\n                /*on calcule le nouveau h */\r\n                var newH = (Math.abs(endNode.row - node.row) + Math.abs(endNode.col - node.col)) * Node_1.NODE_DISTANCE_VALUE;\r\n                /*on calcule le nouveau F*/\r\n                var newF = newH + newG;\r\n                if ((opened && newG < node.g) ||\r\n                    !opened) {\r\n                    //Si le node est déjà dans la liste ouverte, recalculez son G, s'il est inférieur à l'ancien, \r\n                    //faites de CURRENT  son parent(P) et recalculez et enregistrez ses propriétés F et H.\r\n                    //Si le node n'est pas dans la liste ouverte, ajoutez-le à la dite liste et faites de CURRENT son parent(P). \r\n                    //Calculez et enregistrez ses propriétés F, G et H.\r\n                    node.parent = currentNode;\r\n                    node.g = newG;\r\n                    node.h = newH;\r\n                    node.f = newF;\r\n                    if (!opened) {\r\n                        this.addToOpenList(node);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // on finalise notre algo\r\n        var finalPath = [];\r\n        // on est sorti de la liste, on a deux solutions, soit la liste ouverte est vide dans ces cas là il \r\n        // n'y a pas de solutions et on retourne un finalPath vide\r\n        // soit il y a au moins un élément dans la liste ouverte et on peut reconstruire le chemin à rebours.\r\n        if (this.opened.length > 0) {\r\n            // Soit on construit le chemin à rebours;\r\n            var lastNode = endNode;\r\n            while (lastNode != startNode) {\r\n                finalPath.unshift(lastNode);\r\n                lastNode = lastNode.parent;\r\n            }\r\n        }\r\n        //on retourne nos résultats\r\n        return finalPath;\r\n    };\r\n    FastFinder.prototype.addToCloseList = function (param_node) {\r\n        var index = this.opened.indexOf(param_node);\r\n        if (index > -1)\r\n            this.opened.splice(index, 1);\r\n        this.closed.push(param_node);\r\n        param_node.state = Node_1.CLOSED;\r\n    };\r\n    FastFinder.prototype.addToOpenList = function (param_node) {\r\n        var index = this.closed.indexOf(param_node);\r\n        if (index > -1)\r\n            this.closed.splice(index, 1);\r\n        this.opened.push(param_node);\r\n        param_node.state = Node_1.OPENED;\r\n    };\r\n    FastFinder.prototype.getNeighbours = function (node, graphe) {\r\n        var row = node.row;\r\n        var col = node.col;\r\n        var indices = [[row, col + 1], [row, col - 1], [row - 1, col], [row + 1, col]];\r\n        var results = [];\r\n        indices.forEach(function (coords) {\r\n            var r = coords[0];\r\n            var c = coords[1];\r\n            if (graphe[r] && graphe[r][c]) {\r\n                results.push(graphe[r][c]);\r\n            }\r\n        });\r\n        return results;\r\n    };\r\n    FastFinder.prototype.isOnOpenList = function (param_node) {\r\n        return this.opened.indexOf(param_node) > -1;\r\n    };\r\n    FastFinder.prototype.isOnCloseList = function (param_node) {\r\n        return this.closed.indexOf(param_node) > -1;\r\n    };\r\n    return FastFinder;\r\n}());\r\nexports.FastFinder = FastFinder;\r\n\n\n//# sourceURL=webpack:///./dist/pathfinding/FastFinder.js?");

/***/ }),

/***/ "./dist/pathfinding/Log.js":
/*!*********************************!*\
  !*** ./dist/pathfinding/Log.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.LogType = exports.Log = void 0;\r\nvar Log = /** @class */ (function () {\r\n    function Log() {\r\n    }\r\n    return Log;\r\n}());\r\nexports.Log = Log;\r\nvar LogType;\r\n(function (LogType) {\r\n    LogType[\"ADD_TO_CLOSE_LIST\"] = \"ADD_TO_CLOSE_LIST\";\r\n    LogType[\"ADD_TO_OPEN_LIST\"] = \"ADD_TO_OPEN_LIST\";\r\n    LogType[\"SET_CURRENT_NODE\"] = \"SET_CURRENT_NODE\";\r\n    LogType[\"SET_PARENT_NODE\"] = \"SET_PARENT_NODE\";\r\n    LogType[\"RECALC_VALUES\"] = \"RECALC_VALUES\";\r\n    LogType[\"COMPLETE\"] = \"COMPLETE\";\r\n})(LogType = exports.LogType || (exports.LogType = {}));\r\n\n\n//# sourceURL=webpack:///./dist/pathfinding/Log.js?");

/***/ }),

/***/ "./dist/pathfinding/Node.js":
/*!**********************************!*\
  !*** ./dist/pathfinding/Node.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Node = exports.NODE_DISTANCE_VALUE = exports.RETAINED = exports.CLOSED = exports.OPENED = exports.NEUTRAL = void 0;\r\nexports.NEUTRAL = 0;\r\nexports.OPENED = 100;\r\nexports.CLOSED = 200;\r\nexports.RETAINED = 300;\r\nexports.NODE_DISTANCE_VALUE = 10;\r\nvar Node = /** @class */ (function () {\r\n    function Node() {\r\n        this.g = 0;\r\n        this.h = 0;\r\n        this.f = 0;\r\n        this.col = 0;\r\n        this.row = 0;\r\n        this.isStartNode = false;\r\n        this.isEndNode = false;\r\n        this.walkable = true;\r\n        this.parent = null;\r\n        this.state = exports.NEUTRAL;\r\n    }\r\n    Node.prototype.toString = function () {\r\n        return this.row + \", \" + this.col;\r\n    };\r\n    Node.prototype.clone = function () {\r\n        var node = new Node();\r\n        node.g = this.g;\r\n        node.h = this.h;\r\n        node.f = this.f;\r\n        node.col = this.col;\r\n        node.row = this.row;\r\n        node.walkable = this.walkable;\r\n        node.parent = this.parent;\r\n        node.state = this.state;\r\n        node.isStartNode = this.isEndNode;\r\n        node.isEndNode = this.isEndNode;\r\n        return node;\r\n    };\r\n    return Node;\r\n}());\r\nexports.Node = Node;\r\n\n\n//# sourceURL=webpack:///./dist/pathfinding/Node.js?");

/***/ }),

/***/ "./dist/pathfinding/PathFinder.js":
/*!****************************************!*\
  !*** ./dist/pathfinding/PathFinder.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PathFinder = void 0;\r\nvar Log_1 = __webpack_require__(/*! ./Log */ \"./dist/pathfinding/Log.js\");\r\nvar Node_1 = __webpack_require__(/*! ./Node */ \"./dist/pathfinding/Node.js\");\r\nvar PathFinder = /** @class */ (function () {\r\n    function PathFinder() {\r\n        this.opened = [];\r\n        this.closed = [];\r\n        this._graphe = [];\r\n        this._start = null;\r\n        this._end = null;\r\n        this._logs = [];\r\n    }\r\n    PathFinder.prototype.step = function () {\r\n        // a. Récupération du node avec le plus petit F contenu dans la liste ouverte. \r\n        // On le nommera CURRENT.\r\n        this.opened.sort(function (a, b) { return a.f < b.f ? -1 : 1; });\r\n        var currentNode = this.opened[0];\r\n        this._logs.push({ type: Log_1.LogType.SET_CURRENT_NODE, target: currentNode });\r\n        //  stopper la méthode si on ajoute le noeud d'arrivée à la liste fermée\r\n        if (this.opened.length > 0 && currentNode === this._end) {\r\n            this._logs.push({ type: Log_1.LogType.COMPLETE, target: currentNode });\r\n            return false;\r\n        }\r\n        // b. Basculer CURRENT dans la liste fermée.\r\n        this.addToCloseList(currentNode);\r\n        //  récupération des voisins de CURRENT\r\n        var neighbours = this.getNeighbours(currentNode, this._graphe);\r\n        var maxi = neighbours.length;\r\n        // Pour chacun des nodes adjacents à CURRENT appliquer la méthode suivante:\r\n        for (var i = 0; i < maxi; ++i) {\r\n            var node = neighbours[i];\r\n            //Si le node est un obstacle ou est dans la liste fermée ignorez-le et passer à l'analyse d'un autre node.\r\n            if (this.isOnCloseList(node) || node.walkable === false)\r\n                continue;\r\n            var opened = this.isOnOpenList(node);\r\n            /* on calcule le nouveau g */\r\n            var newG = currentNode.g + Node_1.NODE_DISTANCE_VALUE;\r\n            /*on calcule le nouveau h */\r\n            var newH = (Math.abs(this._end.row - node.row) + Math.abs(this._end.col - node.col)) * Node_1.NODE_DISTANCE_VALUE;\r\n            /*on calcule le nouveau F*/\r\n            var newF = newH + newG;\r\n            if ((opened && newG < node.g) ||\r\n                !opened) {\r\n                //Si le node est déjà dans la liste ouverte, recalculez son G, s'il est inférieur à l'ancien, \r\n                //faites de CURRENT  son parent(P) et recalculez et enregistrez ses propriétés F et H.\r\n                //Si le node n'est pas dans la liste ouverte, ajoutez-le à la dite liste et faites de CURRENT son parent(P). \r\n                //Calculez et enregistrez ses propriétés F, G et H.\r\n                node.parent = currentNode;\r\n                node.g = newG;\r\n                node.h = newH;\r\n                node.f = newF;\r\n                this._logs.push({ type: Log_1.LogType.RECALC_VALUES, target: node, parent: currentNode });\r\n                if (!opened) {\r\n                    this.addToOpenList(node);\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    PathFinder.prototype.findPath = function (param_graphe, param_start, param_end) {\r\n        // on crée les listes fermées et les listes ouvertes\r\n        this.opened = new Array();\r\n        this.closed = new Array();\r\n        this._start = param_start;\r\n        this._end = param_end;\r\n        this._graphe = param_graphe;\r\n        // - Ajout du node de départ à la liste ouverte.\r\n        this.addToOpenList(this._start);\r\n        //  stopper la boucle si la liste ouverte est vide\r\n        var hasNextStep = true;\r\n        while (hasNextStep) {\r\n            hasNextStep = this.step();\r\n        }\r\n        // on finalise notre algo\r\n        var finalPath = [];\r\n        // on est sorti de la liste, on a deux solutions, soit la liste ouverte est vide dans ces cas là il \r\n        // n'y a pas de solutions et on retourne un finalPath vide\r\n        // soit il y a au moins un élément dans la liste ouverte et on peut reconstruire le chemin à rebours.\r\n        if (this.opened.length > 0) {\r\n            // Soit on construit le chemin à rebours;\r\n            var lastNode = this._end;\r\n            while (lastNode != this._start) {\r\n                finalPath.unshift(lastNode);\r\n                lastNode = lastNode.parent;\r\n            }\r\n        }\r\n        //on retourne nos résultats\r\n        return {\r\n            logs: this._logs,\r\n            solution: finalPath\r\n        };\r\n    };\r\n    PathFinder.prototype.addToCloseList = function (param_node) {\r\n        var index = this.opened.indexOf(param_node);\r\n        if (index > -1)\r\n            this.opened.splice(index, 1);\r\n        this.closed.push(param_node);\r\n        param_node.state = 200;\r\n        this._logs.push({ type: Log_1.LogType.ADD_TO_CLOSE_LIST, target: param_node });\r\n    };\r\n    PathFinder.prototype.addToOpenList = function (param_node) {\r\n        var index = this.closed.indexOf(param_node);\r\n        if (index > -1)\r\n            this.closed.splice(index, 1);\r\n        this.opened.push(param_node);\r\n        param_node.state = 100;\r\n        this._logs.push({ type: Log_1.LogType.ADD_TO_OPEN_LIST, target: param_node });\r\n    };\r\n    PathFinder.prototype.getNeighbours = function (node, graphe) {\r\n        var row = node.row;\r\n        var col = node.col;\r\n        var indices = [[row, col + 1], [row, col - 1], [row - 1, col], [row + 1, col]];\r\n        var results = [];\r\n        indices.forEach(function (coords) {\r\n            var r = coords[0];\r\n            var c = coords[1];\r\n            if (graphe[r] && graphe[r][c]) {\r\n                results.push(graphe[r][c]);\r\n            }\r\n        });\r\n        return results;\r\n    };\r\n    PathFinder.prototype.isOnOpenList = function (param_node) {\r\n        return this.opened.indexOf(param_node) > -1;\r\n    };\r\n    PathFinder.prototype.isOnCloseList = function (param_node) {\r\n        return this.closed.indexOf(param_node) > -1;\r\n    };\r\n    return PathFinder;\r\n}());\r\nexports.PathFinder = PathFinder;\r\n\n\n//# sourceURL=webpack:///./dist/pathfinding/PathFinder.js?");

/***/ }),

/***/ "./dist/view/Actor.js":
/*!****************************!*\
  !*** ./dist/view/Actor.js ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Actor = void 0;\r\nvar Config_1 = __webpack_require__(/*! ../config/Config */ \"./dist/config/Config.js\");\r\nvar Actor = /** @class */ (function () {\r\n    function Actor() {\r\n        this.texture = null;\r\n        this.row = 0;\r\n        this.col = 0;\r\n        this.x = 0;\r\n        this.y = 0;\r\n    }\r\n    Actor.prototype.render = function (context) {\r\n        if (this.texture === null)\r\n            return;\r\n        var x = this.row * Config_1.CELL_SIZE;\r\n        var y = this.col * Config_1.CELL_SIZE;\r\n        this.x += (x - this.x) * 0.1;\r\n        this.y += (y - this.y) * 0.1;\r\n        context.save();\r\n        context.translate(this.x, this.y);\r\n        context.drawImage(this.texture, 0, 0, Config_1.CELL_SIZE, Config_1.CELL_SIZE);\r\n        context.restore();\r\n    };\r\n    return Actor;\r\n}());\r\nexports.Actor = Actor;\r\n\n\n//# sourceURL=webpack:///./dist/view/Actor.js?");

/***/ }),

/***/ "./dist/view/NodeView.js":
/*!*******************************!*\
  !*** ./dist/view/NodeView.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.NodeView = void 0;\r\nvar AssetsManager_1 = __webpack_require__(/*! ../assets/AssetsManager */ \"./dist/assets/AssetsManager.js\");\r\nvar Config_1 = __webpack_require__(/*! ../config/Config */ \"./dist/config/Config.js\");\r\nvar Node_1 = __webpack_require__(/*! ../pathfinding/Node */ \"./dist/pathfinding/Node.js\");\r\nvar NodeView = /** @class */ (function () {\r\n    function NodeView() {\r\n        this._model = null;\r\n        this.texture = null;\r\n        this.row = 0;\r\n        this.col = 0;\r\n    }\r\n    NodeView.prototype.setModel = function (node) {\r\n        this._model = node;\r\n        var manager = AssetsManager_1.AssetsManager.getInstance();\r\n        this.row = this._model.row;\r\n        this.col = this._model.col;\r\n        if (this._model.walkable)\r\n            this.texture = manager.getAssetByKey(Config_1.FLOOR_KEY).data;\r\n        else\r\n            this.texture = manager.getAssetByKey(Config_1.WALL_KEY).data;\r\n    };\r\n    NodeView.prototype.getModel = function () {\r\n        return this._model;\r\n    };\r\n    NodeView.prototype.drawInfo = function (context) {\r\n        if (this._model.walkable &&\r\n            (this._model.state === Node_1.OPENED || this._model.state === Node_1.CLOSED)) {\r\n            context.save();\r\n            context.globalAlpha = 1;\r\n            context.beginPath();\r\n            context.fillStyle = \"black\";\r\n            context.font = \"1rem Arial\";\r\n            context.fillText(\"f: \" + this._model.f, 10, 15, Config_1.CELL_SIZE);\r\n            context.fillText(\"h: \" + this._model.h, 10, 30, Config_1.CELL_SIZE);\r\n            context.fillText(\"g: \" + this._model.g, 10, 45, Config_1.CELL_SIZE);\r\n            context.fill();\r\n            context.closePath();\r\n            context.restore();\r\n        }\r\n    };\r\n    NodeView.prototype.drawState = function (context) {\r\n        var validStates = [Node_1.CLOSED, Node_1.RETAINED, Node_1.OPENED];\r\n        if (!this._model.walkable || validStates.indexOf(this._model.state) === -1)\r\n            return;\r\n        context.save();\r\n        context.globalAlpha = 0.5;\r\n        context.beginPath();\r\n        if (this._model.state === Node_1.CLOSED)\r\n            context.fillStyle = \"red\";\r\n        else if (this._model.state === Node_1.OPENED)\r\n            context.fillStyle = \"rgba(255,255,255,1)\";\r\n        else if (this._model.state === Node_1.RETAINED)\r\n            context.fillStyle = \"rgba(50,255,125,1)\";\r\n        context.fillRect(0, 0, Config_1.CELL_SIZE, Config_1.CELL_SIZE);\r\n        context.fill();\r\n        context.closePath();\r\n        context.restore();\r\n    };\r\n    NodeView.prototype.render = function (context) {\r\n        if (this._model === null || this.texture === null)\r\n            return;\r\n        context.save();\r\n        context.translate(this._model.row * Config_1.CELL_SIZE, this._model.col * Config_1.CELL_SIZE);\r\n        context.drawImage(this.texture, 0, 0, Config_1.CELL_SIZE, Config_1.CELL_SIZE);\r\n        this.drawState(context);\r\n        this.drawInfo(context);\r\n        context.restore();\r\n    };\r\n    return NodeView;\r\n}());\r\nexports.NodeView = NodeView;\r\n\n\n//# sourceURL=webpack:///./dist/view/NodeView.js?");

/***/ }),

/***/ "./dist/view/Renderer.js":
/*!*******************************!*\
  !*** ./dist/view/Renderer.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Renderer = void 0;\r\nvar Config_1 = __webpack_require__(/*! ../config/Config */ \"./dist/config/Config.js\");\r\nvar AssetsManager_1 = __webpack_require__(/*! ../assets/AssetsManager */ \"./dist/assets/AssetsManager.js\");\r\nvar Actor_1 = __webpack_require__(/*! ./Actor */ \"./dist/view/Actor.js\");\r\nvar NodeView_1 = __webpack_require__(/*! ./NodeView */ \"./dist/view/NodeView.js\");\r\nvar Renderer = /** @class */ (function () {\r\n    function Renderer() {\r\n        this.map = null;\r\n        this.children = [];\r\n        this.canvas = null;\r\n        this._heroe = null;\r\n        this._chest = null;\r\n        this._heroe = new Actor_1.Actor();\r\n        this._chest = new Actor_1.Actor();\r\n    }\r\n    Renderer.prototype.reset = function (canvas, map) {\r\n        this.map = map;\r\n        this.canvas = canvas;\r\n        this.children = [];\r\n        var graphe = this.map.getData();\r\n        for (var i = 0; i < graphe.length; i++) {\r\n            var row = graphe[i];\r\n            for (var j = 0; j < row.length; j++) {\r\n                var node = row[j];\r\n                var view = new NodeView_1.NodeView();\r\n                view.setModel(node);\r\n                this.children.push(view);\r\n            }\r\n        }\r\n        this._chest.row = this.map.getEndNode().row;\r\n        this._chest.col = this.map.getEndNode().col;\r\n        this._heroe.row = this.map.getStartNode().row;\r\n        this._heroe.col = this.map.getStartNode().col;\r\n        this._heroe.texture = AssetsManager_1.AssetsManager.getInstance().getAssetByKey(Config_1.HEROE_KEY).data;\r\n        this._chest.texture = AssetsManager_1.AssetsManager.getInstance().getAssetByKey(Config_1.CHEST_KEY).data;\r\n        this.children.push(this._chest, this._heroe);\r\n    };\r\n    Renderer.prototype.render = function () {\r\n        var _this = this;\r\n        if (this.canvas === null)\r\n            return;\r\n        var context = this.canvas.getContext(\"2d\");\r\n        for (var i = 0; i < this.children.length; i++) {\r\n            this.children[i].render(context);\r\n        }\r\n        window.requestAnimationFrame(function () { return _this.render(); });\r\n    };\r\n    Renderer.prototype.getHeroe = function () {\r\n        return this._heroe;\r\n    };\r\n    Renderer.prototype.getChest = function () {\r\n        return this._chest;\r\n    };\r\n    Renderer.prototype.getFloorByCoords = function (row, col) {\r\n        var found = this.children.find(function (value) {\r\n            return (value instanceof NodeView_1.NodeView &&\r\n                value.row === row &&\r\n                value.col === col);\r\n        });\r\n        return found;\r\n    };\r\n    return Renderer;\r\n}());\r\nexports.Renderer = Renderer;\r\n\n\n//# sourceURL=webpack:///./dist/view/Renderer.js?");

/***/ })

/******/ });